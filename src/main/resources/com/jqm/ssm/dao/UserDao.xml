<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jqm.ssm.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.jqm.ssm.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="fullname" jdbcType="VARCHAR" property="fullname"/>
        <result column="gender" jdbcType="BIT" property="gender"/>
        <result column="is_admin" jdbcType="BIT" property="isAdmin"/>
        <result column="department_id" jdbcType="INTEGER" property="departmentId"/>
        <result column="is_lock" jdbcType="BIT" property="isLock"/>
        <result column="delete_flag" jdbcType="BIT" property="deleteFlag"/>
        <result column="create_person" jdbcType="VARCHAR" property="createPerson"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_person" jdbcType="VARCHAR" property="updatePerson"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, fullname, gender, is_admin, department_id, is_lock, delete_flag, 
    create_person, create_date, update_person, update_date
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from water_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from water_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.jqm.ssm.entity.User">
    insert into water_user (id, username, password, 
      fullname, gender, is_admin, 
      department_id, is_lock, delete_flag, 
      create_person, create_date, update_person, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{fullname,jdbcType=VARCHAR}, #{gender,jdbcType=BIT}, #{isAdmin,jdbcType=BIT}, 
      #{departmentId,jdbcType=INTEGER}, #{isLock,jdbcType=BIT}, #{deleteFlag,jdbcType=BIT}, 
      #{createPerson,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updatePerson,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.jqm.ssm.entity.User">
        insert into water_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="fullname != null">
                fullname,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="isAdmin != null">
                is_admin,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="isLock != null">
                is_lock,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="createPerson != null">
                create_person,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updatePerson != null">
                update_person,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="fullname != null">
                #{fullname,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=BIT},
            </if>
            <if test="isAdmin != null">
                #{isAdmin,jdbcType=BIT},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="isLock != null">
                #{isLock,jdbcType=BIT},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=BIT},
            </if>
            <if test="createPerson != null">
                #{createPerson,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatePerson != null">
                #{updatePerson,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jqm.ssm.entity.User">
        update water_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="fullname != null">
                fullname = #{fullname,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=BIT},
            </if>
            <if test="isAdmin != null">
                is_admin = #{isAdmin,jdbcType=BIT},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="isLock != null">
                is_lock = #{isLock,jdbcType=BIT},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=BIT},
            </if>
            <if test="createPerson != null">
                create_person = #{createPerson,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updatePerson != null">
                update_person = #{updatePerson,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jqm.ssm.entity.User">
    update water_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      fullname = #{fullname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=BIT},
      is_admin = #{isAdmin,jdbcType=BIT},
      department_id = #{departmentId,jdbcType=INTEGER},
      is_lock = #{isLock,jdbcType=BIT},
      delete_flag = #{deleteFlag,jdbcType=BIT},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="deleteLogicByIds">
        update water_user set deleteFlag = #{deleteFlag,jdbcType=INTEGER} where id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">#{item}</foreach>
    </update>
    <sql id="OracleDialectPrefix">
        <if test="page != null and databaseId == 'oracle'">
            select * from ( select row_.*, rownum rownum_ from (
        </if>
    </sql>
    <sql id="OracleDialectSuffix">
        <if test="page != null and databaseId == 'oracle'">
            <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
        </if>
    </sql>
    <sql id="MysqlDialect">
        <if test="page != null and databaseId == 'mysql'">
            limit #{page.begin} , #{page.length}
        </if>
    </sql>
    <select id="selectCountByMap" parameterType="map" resultType="int">
        select count(*) from
        <if test="dynamicTableName != null and dynamicTableName != ''">${dynamicTableName}</if>
        <if test="dynamicTableName == null or dynamicTableName == ''">water_user</if>
        <include refid="Base_Query_Mawater_Condition"/>
    </select>
    <select id="selectListByMap" parameterType="map" resultMap="BaseResultMap">
        <include refid="OracleDialectPrefix"/>
        select
        <include refid="Base_Column_List"/>
        from
        <if test="dynamicTableName != null and dynamicTableName != ''">${dynamicTableName}</if>
        <if test="dynamicTableName == null or dynamicTableName == ''">water_user</if>
        <include refid="Base_Query_Mawater_Condition"/>
        order by id desc
        <include refid="OracleDialectSuffix"/>
        <include refid="MysqlDialect"/>
    </select>
    <sql id="Base_Query_Mawater_Condition">
        <trim prefix="where" prefixOverrides="and | or">
            <if test="id != null and id != ''">
                AND id = #{id,jdbcType=INTEGER}
            </if>
            <if test="username != null and username != ''">
                AND username = #{username,jdbcType=VARCHAR}
            </if>
            <if test="password != null and password != ''">
                AND password = #{password,jdbcType=VARCHAR}
            </if>
            <if test="fullname != null and fullname != ''">
                AND fullname = #{fullname,jdbcType=VARCHAR}
            </if>
            <if test="gender != null and gender != ''">
                AND gender = #{gender,jdbcType=BIT}
            </if>
            <if test="isAdmin != null and isAdmin != ''">
                AND is_admin = #{isAdmin,jdbcType=BIT}
            </if>
            <if test="departmentId != null and departmentId != ''">
                AND department_id = #{departmentId,jdbcType=INTEGER}
            </if>
            <if test="isLock != null and isLock != ''">
                AND is_lock = #{isLock,jdbcType=BIT}
            </if>
            <if test="deleteFlag != null and deleteFlag != ''">
                AND delete_flag = #{deleteFlag,jdbcType=BIT}
            </if>
            <if test="createPerson != null and createPerson != ''">
                AND create_person = #{createPerson,jdbcType=VARCHAR}
            </if>
            <if test="createDate != null and createDate != ''">
                AND create_date = #{createDate,jdbcType=TIMESTAMP}
            </if>
            <if test="updatePerson != null and updatePerson != ''">
                AND update_person = #{updatePerson,jdbcType=VARCHAR}
            </if>
            <if test="updateDate != null and updateDate != ''">
                AND update_date = #{updateDate,jdbcType=TIMESTAMP}
            </if>
            <if test="myGreater_id != null and myGreater_id != ''">
                AND id &gt; #{myGreater_id,jdbcType=INTEGER}
            </if>
            <if test="myGreater_username != null and myGreater_username != ''">
                AND username &gt; #{myGreater_username,jdbcType=VARCHAR}
            </if>
            <if test="myGreater_password != null and myGreater_password != ''">
                AND password &gt; #{myGreater_password,jdbcType=VARCHAR}
            </if>
            <if test="myGreater_fullname != null and myGreater_fullname != ''">
                AND fullname &gt; #{myGreater_fullname,jdbcType=VARCHAR}
            </if>
            <if test="myGreater_gender != null and myGreater_gender != ''">
                AND gender &gt; #{myGreater_gender,jdbcType=BIT}
            </if>
            <if test="myGreater_isAdmin != null and myGreater_isAdmin != ''">
                AND is_admin &gt; #{myGreater_isAdmin,jdbcType=BIT}
            </if>
            <if test="myGreater_departmentId != null and myGreater_departmentId != ''">
                AND department_id &gt; #{myGreater_departmentId,jdbcType=INTEGER}
            </if>
            <if test="myGreater_isLock != null and myGreater_isLock != ''">
                AND is_lock &gt; #{myGreater_isLock,jdbcType=BIT}
            </if>
            <if test="myGreater_deleteFlag != null and myGreater_deleteFlag != ''">
                AND delete_flag &gt; #{myGreater_deleteFlag,jdbcType=BIT}
            </if>
            <if test="myGreater_createPerson != null and myGreater_createPerson != ''">
                AND create_person &gt; #{myGreater_createPerson,jdbcType=VARCHAR}
            </if>
            <if test="myGreater_createDate != null and myGreater_createDate != ''">
                AND create_date &gt; #{myGreater_createDate,jdbcType=TIMESTAMP}
            </if>
            <if test="myGreater_updatePerson != null and myGreater_updatePerson != ''">
                AND update_person &gt; #{myGreater_updatePerson,jdbcType=VARCHAR}
            </if>
            <if test="myGreater_updateDate != null and myGreater_updateDate != ''">
                AND update_date &gt; #{myGreater_updateDate,jdbcType=TIMESTAMP}
            </if>
            <if test="myLesser_id != null and myLesser_id != ''">
                AND id &lt; #{myLesser_id,jdbcType=INTEGER}
            </if>
            <if test="myLesser_username != null and myLesser_username != ''">
                AND username &lt; #{myLesser_username,jdbcType=VARCHAR}
            </if>
            <if test="myLesser_password != null and myLesser_password != ''">
                AND password &lt; #{myLesser_password,jdbcType=VARCHAR}
            </if>
            <if test="myLesser_fullname != null and myLesser_fullname != ''">
                AND fullname &lt; #{myLesser_fullname,jdbcType=VARCHAR}
            </if>
            <if test="myLesser_gender != null and myLesser_gender != ''">
                AND gender &lt; #{myLesser_gender,jdbcType=BIT}
            </if>
            <if test="myLesser_isAdmin != null and myLesser_isAdmin != ''">
                AND is_admin &lt; #{myLesser_isAdmin,jdbcType=BIT}
            </if>
            <if test="myLesser_departmentId != null and myLesser_departmentId != ''">
                AND department_id &lt; #{myLesser_departmentId,jdbcType=INTEGER}
            </if>
            <if test="myLesser_isLock != null and myLesser_isLock != ''">
                AND is_lock &lt; #{myLesser_isLock,jdbcType=BIT}
            </if>
            <if test="myLesser_deleteFlag != null and myLesser_deleteFlag != ''">
                AND delete_flag &lt; #{myLesser_deleteFlag,jdbcType=BIT}
            </if>
            <if test="myLesser_createPerson != null and myLesser_createPerson != ''">
                AND create_person &lt; #{myLesser_createPerson,jdbcType=VARCHAR}
            </if>
            <if test="myLesser_createDate != null and myLesser_createDate != ''">
                AND create_date &lt; #{myLesser_createDate,jdbcType=TIMESTAMP}
            </if>
            <if test="myLesser_updatePerson != null and myLesser_updatePerson != ''">
                AND update_person &lt; #{myLesser_updatePerson,jdbcType=VARCHAR}
            </if>
            <if test="myLesser_updateDate != null and myLesser_updateDate != ''">
                AND update_date &lt; #{myLesser_updateDate,jdbcType=TIMESTAMP}
            </if>
            <if test="myLike_id != null and myLike_id != ''">
                AND id like CONCAT('%', #{myLike_id,jdbcType=INTEGER},'%' )
            </if>
            <if test="myLike_username != null and myLike_username != ''">
                AND username like CONCAT('%', #{myLike_username,jdbcType=VARCHAR},'%' )
            </if>
            <if test="myLike_password != null and myLike_password != ''">
                AND password like CONCAT('%', #{myLike_password,jdbcType=VARCHAR},'%' )
            </if>
            <if test="myLike_fullname != null and myLike_fullname != ''">
                AND fullname like CONCAT('%', #{myLike_fullname,jdbcType=VARCHAR},'%' )
            </if>
            <if test="myLike_gender != null and myLike_gender != ''">
                AND gender like CONCAT('%', #{myLike_gender,jdbcType=BIT},'%' )
            </if>
            <if test="myLike_isAdmin != null and myLike_isAdmin != ''">
                AND is_admin like CONCAT('%', #{myLike_isAdmin,jdbcType=BIT},'%' )
            </if>
            <if test="myLike_departmentId != null and myLike_departmentId != ''">
                AND department_id like CONCAT('%', #{myLike_departmentId,jdbcType=INTEGER},'%' )
            </if>
            <if test="myLike_isLock != null and myLike_isLock != ''">
                AND is_lock like CONCAT('%', #{myLike_isLock,jdbcType=BIT},'%' )
            </if>
            <if test="myLike_deleteFlag != null and myLike_deleteFlag != ''">
                AND delete_flag like CONCAT('%', #{myLike_deleteFlag,jdbcType=BIT},'%' )
            </if>
            <if test="myLike_createPerson != null and myLike_createPerson != ''">
                AND create_person like CONCAT('%', #{myLike_createPerson,jdbcType=VARCHAR},'%' )
            </if>
            <if test="myLike_createDate != null and myLike_createDate != ''">
                AND create_date like CONCAT('%', #{myLike_createDate,jdbcType=TIMESTAMP},'%' )
            </if>
            <if test="myLike_updatePerson != null and myLike_updatePerson != ''">
                AND update_person like CONCAT('%', #{myLike_updatePerson,jdbcType=VARCHAR},'%' )
            </if>
            <if test="myLike_updateDate != null and myLike_updateDate != ''">
                AND update_date like CONCAT('%', #{myLike_updateDate,jdbcType=TIMESTAMP},'%' )
            </if>
            <if test="myLikeStart_id != null and myLikeStart_id != ''">
                AND id like CONCAT('%', #{myLikeStart_id,jdbcType=INTEGER})
            </if>
            <if test="myLikeStart_username != null and myLikeStart_username != ''">
                AND username like CONCAT('%', #{myLikeStart_username,jdbcType=VARCHAR})
            </if>
            <if test="myLikeStart_password != null and myLikeStart_password != ''">
                AND password like CONCAT('%', #{myLikeStart_password,jdbcType=VARCHAR})
            </if>
            <if test="myLikeStart_fullname != null and myLikeStart_fullname != ''">
                AND fullname like CONCAT('%', #{myLikeStart_fullname,jdbcType=VARCHAR})
            </if>
            <if test="myLikeStart_gender != null and myLikeStart_gender != ''">
                AND gender like CONCAT('%', #{myLikeStart_gender,jdbcType=BIT})
            </if>
            <if test="myLikeStart_isAdmin != null and myLikeStart_isAdmin != ''">
                AND is_admin like CONCAT('%', #{myLikeStart_isAdmin,jdbcType=BIT})
            </if>
            <if test="myLikeStart_departmentId != null and myLikeStart_departmentId != ''">
                AND department_id like CONCAT('%', #{myLikeStart_departmentId,jdbcType=INTEGER})
            </if>
            <if test="myLikeStart_isLock != null and myLikeStart_isLock != ''">
                AND is_lock like CONCAT('%', #{myLikeStart_isLock,jdbcType=BIT})
            </if>
            <if test="myLikeStart_deleteFlag != null and myLikeStart_deleteFlag != ''">
                AND delete_flag like CONCAT('%', #{myLikeStart_deleteFlag,jdbcType=BIT})
            </if>
            <if test="myLikeStart_createPerson != null and myLikeStart_createPerson != ''">
                AND create_person like CONCAT('%', #{myLikeStart_createPerson,jdbcType=VARCHAR})
            </if>
            <if test="myLikeStart_createDate != null and myLikeStart_createDate != ''">
                AND create_date like CONCAT('%', #{myLikeStart_createDate,jdbcType=TIMESTAMP})
            </if>
            <if test="myLikeStart_updatePerson != null and myLikeStart_updatePerson != ''">
                AND update_person like CONCAT('%', #{myLikeStart_updatePerson,jdbcType=VARCHAR})
            </if>
            <if test="myLikeStart_updateDate != null and myLikeStart_updateDate != ''">
                AND update_date like CONCAT('%', #{myLikeStart_updateDate,jdbcType=TIMESTAMP})
            </if>
            <if test="myLikeEnd_id != null and myLikeEnd_id != ''">
                AND id like CONCAT( #{myLikeEnd_id,jdbcType=INTEGER},'%' )
            </if>
            <if test="myLikeEnd_username != null and myLikeEnd_username != ''">
                AND username like CONCAT( #{myLikeEnd_username,jdbcType=VARCHAR},'%' )
            </if>
            <if test="myLikeEnd_password != null and myLikeEnd_password != ''">
                AND password like CONCAT( #{myLikeEnd_password,jdbcType=VARCHAR},'%' )
            </if>
            <if test="myLikeEnd_fullname != null and myLikeEnd_fullname != ''">
                AND fullname like CONCAT( #{myLikeEnd_fullname,jdbcType=VARCHAR},'%' )
            </if>
            <if test="myLikeEnd_gender != null and myLikeEnd_gender != ''">
                AND gender like CONCAT( #{myLikeEnd_gender,jdbcType=BIT},'%' )
            </if>
            <if test="myLikeEnd_isAdmin != null and myLikeEnd_isAdmin != ''">
                AND is_admin like CONCAT( #{myLikeEnd_isAdmin,jdbcType=BIT},'%' )
            </if>
            <if test="myLikeEnd_departmentId != null and myLikeEnd_departmentId != ''">
                AND department_id like CONCAT( #{myLikeEnd_departmentId,jdbcType=INTEGER},'%' )
            </if>
            <if test="myLikeEnd_isLock != null and myLikeEnd_isLock != ''">
                AND is_lock like CONCAT( #{myLikeEnd_isLock,jdbcType=BIT},'%' )
            </if>
            <if test="myLikeEnd_deleteFlag != null and myLikeEnd_deleteFlag != ''">
                AND delete_flag like CONCAT( #{myLikeEnd_deleteFlag,jdbcType=BIT},'%' )
            </if>
            <if test="myLikeEnd_createPerson != null and myLikeEnd_createPerson != ''">
                AND create_person like CONCAT( #{myLikeEnd_createPerson,jdbcType=VARCHAR},'%' )
            </if>
            <if test="myLikeEnd_createDate != null and myLikeEnd_createDate != ''">
                AND create_date like CONCAT( #{myLikeEnd_createDate,jdbcType=TIMESTAMP},'%' )
            </if>
            <if test="myLikeEnd_updatePerson != null and myLikeEnd_updatePerson != ''">
                AND update_person like CONCAT( #{myLikeEnd_updatePerson,jdbcType=VARCHAR},'%' )
            </if>
            <if test="myLikeEnd_updateDate != null and myLikeEnd_updateDate != ''">
                AND update_date like CONCAT( #{myLikeEnd_updateDate,jdbcType=TIMESTAMP},'%' )
            </if>
            <if test="myIn_id != null and myIn_id != ''">
                AND id in
                <foreach item="item" index="index" collection="myIn_id" open="(" separator="," close=")">#{item}
                </foreach>
            </if>
            <if test="myIn_username != null and myIn_username != ''">
                AND username in
                <foreach item="item" index="index" collection="myIn_username" open="(" separator="," close=")">#{item}
                </foreach>
            </if>
            <if test="myIn_password != null and myIn_password != ''">
                AND password in
                <foreach item="item" index="index" collection="myIn_password" open="(" separator="," close=")">#{item}
                </foreach>
            </if>
            <if test="myIn_fullname != null and myIn_fullname != ''">
                AND fullname in
                <foreach item="item" index="index" collection="myIn_fullname" open="(" separator="," close=")">#{item}
                </foreach>
            </if>
            <if test="myIn_gender != null and myIn_gender != ''">
                AND gender in
                <foreach item="item" index="index" collection="myIn_gender" open="(" separator="," close=")">#{item}
                </foreach>
            </if>
            <if test="myIn_isAdmin != null and myIn_isAdmin != ''">
                AND is_admin in
                <foreach item="item" index="index" collection="myIn_isAdmin" open="(" separator="," close=")">#{item}
                </foreach>
            </if>
            <if test="myIn_departmentId != null and myIn_departmentId != ''">
                AND department_id in
                <foreach item="item" index="index" collection="myIn_departmentId" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="myIn_isLock != null and myIn_isLock != ''">
                AND is_lock in
                <foreach item="item" index="index" collection="myIn_isLock" open="(" separator="," close=")">#{item}
                </foreach>
            </if>
            <if test="myIn_deleteFlag != null and myIn_deleteFlag != ''">
                AND delete_flag in
                <foreach item="item" index="index" collection="myIn_deleteFlag" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="myIn_createPerson != null and myIn_createPerson != ''">
                AND create_person in
                <foreach item="item" index="index" collection="myIn_createPerson" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="myIn_createDate != null and myIn_createDate != ''">
                AND create_date in
                <foreach item="item" index="index" collection="myIn_createDate" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="myIn_updatePerson != null and myIn_updatePerson != ''">
                AND update_person in
                <foreach item="item" index="index" collection="myIn_updatePerson" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="myIn_updateDate != null and myIn_updateDate != ''">
                AND update_date in
                <foreach item="item" index="index" collection="myIn_updateDate" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </sql>
    <insert id="batchInsert" parameterType="map">
        insert into water_user (id, username, password, fullname, gender, is_admin, department_id, is_lock, delete_flag,
        create_person, create_date, update_person, update_date)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=INTEGER}, #{item.username,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR},
            #{item.fullname,jdbcType=VARCHAR}, #{item.gender,jdbcType=BIT}, #{item.isAdmin,jdbcType=BIT},
            #{item.departmentId,jdbcType=INTEGER}, #{item.isLock,jdbcType=BIT}, #{item.deleteFlag,jdbcType=BIT},
            #{item.createPerson,jdbcType=VARCHAR}, #{item.createDate,jdbcType=TIMESTAMP},
            #{item.updatePerson,jdbcType=VARCHAR}, #{item.updateDate,jdbcType=TIMESTAMP})
        </foreach>
    </insert>
    <insert id="batchInsertSelective" parameterType="map">
        insert into water_user (
        <foreach collection="selective" item="column" separator=",">
            ${column.value}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            <foreach collection="selective" item="column" separator=",">
                <if test="'id' == column.value">
                    #{item.id,jdbcType=INTEGER}
                </if>
                <if test="'username' == column.value">
                    #{item.username,jdbcType=VARCHAR}
                </if>
                <if test="'password' == column.value">
                    #{item.password,jdbcType=VARCHAR}
                </if>
                <if test="'fullname' == column.value">
                    #{item.fullname,jdbcType=VARCHAR}
                </if>
                <if test="'gender' == column.value">
                    #{item.gender,jdbcType=BIT}
                </if>
                <if test="'is_admin' == column.value">
                    #{item.isAdmin,jdbcType=BIT}
                </if>
                <if test="'department_id' == column.value">
                    #{item.departmentId,jdbcType=INTEGER}
                </if>
                <if test="'is_lock' == column.value">
                    #{item.isLock,jdbcType=BIT}
                </if>
                <if test="'delete_flag' == column.value">
                    #{item.deleteFlag,jdbcType=BIT}
                </if>
                <if test="'create_person' == column.value">
                    #{item.createPerson,jdbcType=VARCHAR}
                </if>
                <if test="'create_date' == column.value">
                    #{item.createDate,jdbcType=TIMESTAMP}
                </if>
                <if test="'update_person' == column.value">
                    #{item.updatePerson,jdbcType=VARCHAR}
                </if>
                <if test="'update_date' == column.value">
                    #{item.updateDate,jdbcType=TIMESTAMP}
                </if>
            </foreach>
            )
        </foreach>
    </insert>

    <!--  START 以下为自己编写的代码区域 一般是多表之间的联合查询  START  -->
    <sql id="Base_Column_List2">
    water_user.id, water_user.username, water_user.password, water_user.fullname, water_user.gender, water_user.is_admin, water_user.department_id, water_user.is_lock, water_user.delete_flag,
    water_user.create_person, water_user.create_date, water_user.update_person, water_user.update_date, water_department.name department_name
  </sql>
    <sql id="where">
        where water_user.delete_flag=0
        <if test="keyWord!=null and keyWord!=''">
            and water_user.fullname like CONCAT('%',#{keyWord},'%')
            or water_user.username like CONCAT('%',#{keyWord},'%')
        </if>
        <if test="updatePerson!=null and updatePerson!=''">
            and water_user.update_person = #{updatePerson}
        </if>
        <if test="updateDateMin!=null and updateDateMin!=''">
            and water_user.update_date &gt;= #{updateDateMin}
        </if>
        <if test="updateDateMax!=null and updateDateMax!=''">
            and water_user.update_date &lt;= #{updateDateMax}
        </if>
        <if test="isAdmin!=null">
            and water_user.is_admin = #{isAdmin}
        </if>
        <if test="isLock!=null">
            and water_user.is_lock = #{isLock}
        </if>
        <if test="gender!=null">
            and water_user.gender = #{gender}
        </if>
        <if test="departmentId!=null and departmentId!=''">
            and water_user.department_id = #{departmentId}
        </if>

    </sql>
    <sql id="orderby">
    	order by water_user.id desc
    </sql>

    <sql id="limit">
    limit #{iDisplayStart},#{iDisplayLength}
  </sql>
    <select id="getUserByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List2"/>
        from water_user left join water_department on water_user.department_id=water_department.id
        where water_user.username = #{username,jdbcType=VARCHAR}
    </select>
    <select id="getUserTotalBySearch" parameterType="com.jqm.ssm.entity.relate.UserSearchModel"
            resultType="java.lang.Integer">
        select count(0)
        from water_user
        <include refid="where"/>
    </select>
    <select id="getUserListBySearch" parameterType="com.jqm.ssm.entity.relate.UserSearchModel"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List2"/>
        from water_user left join water_department on water_user.department_id=water_department.id
        <include refid="where"/>
        <include refid="orderby"/>
        <include refid="limit"/>
    </select>
    <delete id="deleteUserRoleById" parameterType="java.lang.Integer">
		delete from water_user_role where user_id=#{id};
	</delete>
    <insert id="assignRoles">
        insert into water_user_role(user_id,role_id)
        values
        <foreach collection="roleIds" index="index" item="item" open="" separator="," close="">
            (#{userId},#{item})
        </foreach>
        ;
    </insert>

    <!--  END 以下为自己编写的代码区域 一般是多表之间的联合查询  END  -->
</mapper>