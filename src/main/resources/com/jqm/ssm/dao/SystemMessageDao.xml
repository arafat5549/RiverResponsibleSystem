<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jqm.ssm.dao.SystemMessageDao">
  <resultMap id="BaseResultMap" type="com.jqm.ssm.entity.SystemMessage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="message_type" jdbcType="TINYINT" property="messageType" />
    <result column="message_method" jdbcType="TINYINT" property="messageMethod" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_person" jdbcType="VARCHAR" property="createPerson" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, message_type, message_method, title, content, status, create_person, create_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from d_system_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from d_system_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jqm.ssm.entity.SystemMessage">
    insert into d_system_message (id, message_type, message_method, 
      title, content, status, 
      create_person, create_date)
    values (#{id,jdbcType=INTEGER}, #{messageType,jdbcType=TINYINT}, #{messageMethod,jdbcType=TINYINT}, 
      #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{createPerson,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jqm.ssm.entity.SystemMessage">
    insert into d_system_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="messageMethod != null">
        message_method,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createPerson != null">
        create_person,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=TINYINT},
      </if>
      <if test="messageMethod != null">
        #{messageMethod,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createPerson != null">
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jqm.ssm.entity.SystemMessage">
    update d_system_message
    <set>
      <if test="messageType != null">
        message_type = #{messageType,jdbcType=TINYINT},
      </if>
      <if test="messageMethod != null">
        message_method = #{messageMethod,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createPerson != null">
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jqm.ssm.entity.SystemMessage">
    update d_system_message
    set message_type = #{messageType,jdbcType=TINYINT},
      message_method = #{messageMethod,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="deleteLogicByIds">
    update d_system_message set deleteFlag = #{deleteFlag,jdbcType=INTEGER} where id in  <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">#{item}</foreach> 
  </update>
  <sql id="OracleDialectPrefix">
    <if test="page != null and databaseId == 'oracle'">
      select * from ( select row_.*, rownum rownum_ from ( 
    </if>
  </sql>
  <sql id="OracleDialectSuffix">
    <if test="page != null and databaseId == 'oracle'">
      <![CDATA[ ) row_ ) where rownum_ > #{page.begin} and rownum_ <= #{page.end} ]]>
    </if>
  </sql>
  <sql id="MysqlDialect">
    <if test="page != null and databaseId == 'mysql'">
      limit #{page.begin} , #{page.length}
    </if>
  </sql>
  <select id="selectCountByMap" parameterType="map" resultType="int">
    select count(*) from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  </if><if test="dynamicTableName == null or dynamicTableName == ''"> d_system_message</if> <include refid="Base_Query_Map_Condition" /> 
  </select>
  <select id="selectListByMap" parameterType="map" resultMap="BaseResultMap">
     <include refid="OracleDialectPrefix" /> select <include refid="Base_Column_List" /> from  <if test="dynamicTableName != null and dynamicTableName != ''"> ${dynamicTableName}  </if><if test="dynamicTableName == null or dynamicTableName == ''"> d_system_message</if> <include refid="Base_Query_Map_Condition" />  order by  id desc <include refid="OracleDialectSuffix" /><include refid="MysqlDialect" /> 
  </select>
  <sql id="Base_Query_Map_Condition">
    <trim prefix="where" prefixOverrides="and | or">
      <if test="id != null and id != ''">
         AND id = #{id,jdbcType=INTEGER}
      </if>
      <if test="messageType != null and messageType != ''">
         AND message_type = #{messageType,jdbcType=TINYINT}
      </if>
      <if test="messageMethod != null and messageMethod != ''">
         AND message_method = #{messageMethod,jdbcType=TINYINT}
      </if>
      <if test="title != null and title != ''">
         AND title = #{title,jdbcType=VARCHAR}
      </if>
      <if test="content != null and content != ''">
         AND content = #{content,jdbcType=VARCHAR}
      </if>
      <if test="status != null and status != ''">
         AND status = #{status,jdbcType=TINYINT}
      </if>
      <if test="createPerson != null and createPerson != ''">
         AND create_person = #{createPerson,jdbcType=VARCHAR}
      </if>
      <if test="createDate != null and createDate != ''">
         AND create_date = #{createDate,jdbcType=TIMESTAMP}
      </if>
      <if test="myGreater_id != null and myGreater_id != ''">
         AND id &gt; #{myGreater_id,jdbcType=INTEGER}
      </if>
      <if test="myGreater_messageType != null and myGreater_messageType != ''">
         AND message_type &gt; #{myGreater_messageType,jdbcType=TINYINT}
      </if>
      <if test="myGreater_messageMethod != null and myGreater_messageMethod != ''">
         AND message_method &gt; #{myGreater_messageMethod,jdbcType=TINYINT}
      </if>
      <if test="myGreater_title != null and myGreater_title != ''">
         AND title &gt; #{myGreater_title,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_content != null and myGreater_content != ''">
         AND content &gt; #{myGreater_content,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_status != null and myGreater_status != ''">
         AND status &gt; #{myGreater_status,jdbcType=TINYINT}
      </if>
      <if test="myGreater_createPerson != null and myGreater_createPerson != ''">
         AND create_person &gt; #{myGreater_createPerson,jdbcType=VARCHAR}
      </if>
      <if test="myGreater_createDate != null and myGreater_createDate != ''">
         AND create_date &gt; #{myGreater_createDate,jdbcType=TIMESTAMP}
      </if>
      <if test="myLesser_id != null and myLesser_id != ''">
         AND id &lt; #{myLesser_id,jdbcType=INTEGER}
      </if>
      <if test="myLesser_messageType != null and myLesser_messageType != ''">
         AND message_type &lt; #{myLesser_messageType,jdbcType=TINYINT}
      </if>
      <if test="myLesser_messageMethod != null and myLesser_messageMethod != ''">
         AND message_method &lt; #{myLesser_messageMethod,jdbcType=TINYINT}
      </if>
      <if test="myLesser_title != null and myLesser_title != ''">
         AND title &lt; #{myLesser_title,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_content != null and myLesser_content != ''">
         AND content &lt; #{myLesser_content,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_status != null and myLesser_status != ''">
         AND status &lt; #{myLesser_status,jdbcType=TINYINT}
      </if>
      <if test="myLesser_createPerson != null and myLesser_createPerson != ''">
         AND create_person &lt; #{myLesser_createPerson,jdbcType=VARCHAR}
      </if>
      <if test="myLesser_createDate != null and myLesser_createDate != ''">
         AND create_date &lt; #{myLesser_createDate,jdbcType=TIMESTAMP}
      </if>
      <if test="myLike_id != null and myLike_id != ''">
         AND id like CONCAT('%', #{myLike_id,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLike_messageType != null and myLike_messageType != ''">
         AND message_type like CONCAT('%', #{myLike_messageType,jdbcType=TINYINT},'%' )
      </if>
      <if test="myLike_messageMethod != null and myLike_messageMethod != ''">
         AND message_method like CONCAT('%', #{myLike_messageMethod,jdbcType=TINYINT},'%' )
      </if>
      <if test="myLike_title != null and myLike_title != ''">
         AND title like CONCAT('%', #{myLike_title,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_content != null and myLike_content != ''">
         AND content like CONCAT('%', #{myLike_content,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_status != null and myLike_status != ''">
         AND status like CONCAT('%', #{myLike_status,jdbcType=TINYINT},'%' )
      </if>
      <if test="myLike_createPerson != null and myLike_createPerson != ''">
         AND create_person like CONCAT('%', #{myLike_createPerson,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLike_createDate != null and myLike_createDate != ''">
         AND create_date like CONCAT('%', #{myLike_createDate,jdbcType=TIMESTAMP},'%' )
      </if>
      <if test="myLikeStart_id != null and myLikeStart_id != ''">
         AND id like CONCAT('%', #{myLikeStart_id,jdbcType=INTEGER})
      </if>
      <if test="myLikeStart_messageType != null and myLikeStart_messageType != ''">
         AND message_type like CONCAT('%', #{myLikeStart_messageType,jdbcType=TINYINT})
      </if>
      <if test="myLikeStart_messageMethod != null and myLikeStart_messageMethod != ''">
         AND message_method like CONCAT('%', #{myLikeStart_messageMethod,jdbcType=TINYINT})
      </if>
      <if test="myLikeStart_title != null and myLikeStart_title != ''">
         AND title like CONCAT('%', #{myLikeStart_title,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_content != null and myLikeStart_content != ''">
         AND content like CONCAT('%', #{myLikeStart_content,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_status != null and myLikeStart_status != ''">
         AND status like CONCAT('%', #{myLikeStart_status,jdbcType=TINYINT})
      </if>
      <if test="myLikeStart_createPerson != null and myLikeStart_createPerson != ''">
         AND create_person like CONCAT('%', #{myLikeStart_createPerson,jdbcType=VARCHAR})
      </if>
      <if test="myLikeStart_createDate != null and myLikeStart_createDate != ''">
         AND create_date like CONCAT('%', #{myLikeStart_createDate,jdbcType=TIMESTAMP})
      </if>
      <if test="myLikeEnd_id != null and myLikeEnd_id != ''">
         AND id like CONCAT( #{myLikeEnd_id,jdbcType=INTEGER},'%' )
      </if>
      <if test="myLikeEnd_messageType != null and myLikeEnd_messageType != ''">
         AND message_type like CONCAT( #{myLikeEnd_messageType,jdbcType=TINYINT},'%' )
      </if>
      <if test="myLikeEnd_messageMethod != null and myLikeEnd_messageMethod != ''">
         AND message_method like CONCAT( #{myLikeEnd_messageMethod,jdbcType=TINYINT},'%' )
      </if>
      <if test="myLikeEnd_title != null and myLikeEnd_title != ''">
         AND title like CONCAT( #{myLikeEnd_title,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_content != null and myLikeEnd_content != ''">
         AND content like CONCAT( #{myLikeEnd_content,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_status != null and myLikeEnd_status != ''">
         AND status like CONCAT( #{myLikeEnd_status,jdbcType=TINYINT},'%' )
      </if>
      <if test="myLikeEnd_createPerson != null and myLikeEnd_createPerson != ''">
         AND create_person like CONCAT( #{myLikeEnd_createPerson,jdbcType=VARCHAR},'%' )
      </if>
      <if test="myLikeEnd_createDate != null and myLikeEnd_createDate != ''">
         AND create_date like CONCAT( #{myLikeEnd_createDate,jdbcType=TIMESTAMP},'%' )
      </if>
      <if test="myIn_id != null and myIn_id != ''">
         AND id in <foreach item="item" index="index" collection="myIn_id" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_messageType != null and myIn_messageType != ''">
         AND message_type in <foreach item="item" index="index" collection="myIn_messageType" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_messageMethod != null and myIn_messageMethod != ''">
         AND message_method in <foreach item="item" index="index" collection="myIn_messageMethod" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_title != null and myIn_title != ''">
         AND title in <foreach item="item" index="index" collection="myIn_title" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_content != null and myIn_content != ''">
         AND content in <foreach item="item" index="index" collection="myIn_content" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_status != null and myIn_status != ''">
         AND status in <foreach item="item" index="index" collection="myIn_status" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_createPerson != null and myIn_createPerson != ''">
         AND create_person in <foreach item="item" index="index" collection="myIn_createPerson" open="(" separator="," close=")"> #{item} </foreach>
      </if>
      <if test="myIn_createDate != null and myIn_createDate != ''">
         AND create_date in <foreach item="item" index="index" collection="myIn_createDate" open="(" separator="," close=")"> #{item} </foreach>
      </if>
    </trim>
  </sql>
  <insert id="batchInsert" parameterType="map">
    insert into d_system_message (id, message_type, message_method, title, content, status, create_person, create_date)
    values
    <foreach collection="list" item="item" separator=",">
       (#{item.id,jdbcType=INTEGER}, #{item.messageType,jdbcType=TINYINT}, #{item.messageMethod,jdbcType=TINYINT}, #{item.title,jdbcType=VARCHAR}, #{item.content,jdbcType=VARCHAR}, #{item.status,jdbcType=TINYINT}, #{item.createPerson,jdbcType=VARCHAR}, #{item.createDate,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into d_system_message (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'message_type' == column.value">
          #{item.messageType,jdbcType=TINYINT}
        </if>
        <if test="'message_method' == column.value">
          #{item.messageMethod,jdbcType=TINYINT}
        </if>
        <if test="'title' == column.value">
          #{item.title,jdbcType=VARCHAR}
        </if>
        <if test="'content' == column.value">
          #{item.content,jdbcType=VARCHAR}
        </if>
        <if test="'status' == column.value">
          #{item.status,jdbcType=TINYINT}
        </if>
        <if test="'create_person' == column.value">
          #{item.createPerson,jdbcType=VARCHAR}
        </if>
        <if test="'create_date' == column.value">
          #{item.createDate,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  
  <!--  START 以下为自己编写的代码区域 一般是多表之间的联合查询  START  -->
  
  
  <!--  END 以下为自己编写的代码区域 一般是多表之间的联合查询  END  -->
</mapper>